<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Topic Analysis of National Competition of Transport Science and Technology]]></title>
    <url>%2Fscarlettliu644.github.io%2F2018%2F12%2F07%2Ftopicanalysis%2F</url>
    <content type="text"><![CDATA[Hi all. In this post, I’m going to introduce a standard scheme to do the data analysis. The object in this post analysis historical topics of National Competition of Transport Science and Technology for Students. This is a competition which is designed for UG students who are majoring in the Transportation Engineering. The content covered by this post are:1&gt; description of OS2&gt; setup of software and related packages3&gt; the procedure of analysis Description of the OSMine: MacBook Pro, OS version: Unix macOS Mojave, Processor: 3.1 GHz Intel Core i7, Memory: 16 GBPython2.7 is preinstalled with Xcode in my MAC. Python2.7 is required for this project. Setup of environment and install related packages Install Anaconda: Link Install tools by terminal:12$ pip install jieba # for Chinese Analysis$ pip install pyldavis Procedure of analysis Prepare your data. Here I used a summarized excel. Or you can srapy something from the website. I’ll talk about how to “scrapy” key information from a target website. Make sure your CSV file is encoded as “utf-8” format.Now, assume you have an csv like this: Open TerminalMove (cd) to the folder where your excel is stored 12cd Downloadsjupyter notebook here is the snapshot if you successfully opened Jupyter Notebook: Move to Jupyter Notebook, create a new Jupyter note, named “topic-analysis”, remember to choose python2. 123import pandas as pd # in order to process the excel, tool Pandas is neededdf = pd.read_csv("data-csu-organised.csv", encoding='utf-8') # read csvdf.head() # show data Check the number of row and column 1df.shape If your CVS file is formatted correctly, you will see the output: Check Chinese words in the column of “Topic” 12345import jiebadef chinese_word_cut(mytext): return " ".join(jieba.cut(mytext))df["content_cutted"] = df.Topic.apply(chinese_word_cut)df.content_cutted.head() # show data Vectorize the data 12345678from sklearn.feature_extraction.text import TfidfVectorizer, CountVectorizern_features = 200 # set the number of key wordstf_vectorizer = CountVectorizer(strip_accents = 'unicode', max_features=n_features, stop_words='english', max_df = 0.5, min_df = 10)tf = tf_vectorizer.fit_transform(df.content_cutted) You won’t see any outcome. Now applying an algorithm called “LDA” to find key topics 1234567from sklearn.decomposition import LatentDirichletAllocationn_topics = 6 # set the number of topics for selected key wordslda = LatentDirichletAllocation(n_topics=n_topics, max_iter=50, learning_method='online', learning_offset=50., random_state=0)lda.fit(tf) Then you will see: Define an function for printting each topic 12345678910def print_top_words(model, feature_names, n_top_words): for topic_idx, topic in enumerate(model.components_): print("Topic #%d:" % topic_idx) print(" ".join([feature_names[i] for i in topic.argsort()[:-n_top_words - 1:-1]])) print()n_top_words = 15 # say there are 5 key words for each topictf_feature_names = tf_vectorizer.get_feature_names()print_top_words(lda, tf_feature_names, n_top_words) # show You can play with some parameters to get what you want: By this step, we can visualize the results in a nicer way. 123456import pyLDAvisimport pyLDAvis.sklearnpyLDAvis.enable_notebook()pyLDAvis.sklearn.prepare(lda, tf, tf_vectorizer)data = pyLDAvis.sklearn.prepare(lda, tf, tf_vectorizer)pyLDAvis.show(data) Here is the output: When you move your mouse around you can see the part highlighted in red: It clearly shows that which key words you should pay attention on your competition topic. Now you can interpret the data in your own way.]]></content>
  </entry>
  <entry>
    <title><![CDATA[Welcome]]></title>
    <url>%2Fscarlettliu644.github.io%2F2018%2F10%2F19%2Fwelcome%2F</url>
    <content type="text"><![CDATA[Hi I’m Scarlett. Welcome to SR2V! Check Projects for more info. If you are intrested in getting in touch, you can find the answer in Contact or you can shoot me an email. More is coming, please stay tuned. If you want more info about SR2V. Please subscribe.]]></content>
  </entry>
</search>
